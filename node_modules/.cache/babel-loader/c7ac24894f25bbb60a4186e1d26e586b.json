{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/elements/gameBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport Cookies from 'universal-cookie';\nimport { Link } from 'react-router-dom';\n\nfunction GameBoard({\n  quiz,\n  changeAlert,\n  forceLogout\n}) {\n  _s();\n\n  const cookies = new Cookies();\n  const [show, setShow] = React.useState(true);\n  const [name, setName] = React.useState(quiz.name);\n  const [questions, setQuestions] = React.useState(quiz.questions);\n  const [thumbnail, setThumbnail] = React.useState(quiz.thumbnail);\n  const [nQuestions, setNQuestions] = React.useState(0);\n  const [time, setTime] = React.useState(0);\n  const [session, setSession] = React.useState(quiz.active);\n  const [hasSession, setHasSession] = React.useState(quiz.active !== null);\n  const initialisation = React.useRef(true);\n  const [popupArea, setPopup] = React.useState(null);\n  const closeBtn = /*#__PURE__*/React.createElement('button', {\n    onClick: () => {\n      setPopup(null);\n    }\n  }, 'Close');\n\n  const getInfo = () => {\n    fetch('http://localhost:5005/admin/quiz/' + quiz.id, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then(result => {\n          setName(result.name);\n          setNQuestions(result.questions.length);\n          setQuestions(result.questions.map(que => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: que.description\n            }, que.description, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 20\n            }, this);\n          }));\n          setThumbnail(result.thumbnail);\n          let timeTmp = 0;\n          result.questions.forEach(q => {\n            timeTmp += q.time;\n          });\n          setTime(timeTmp);\n\n          if (!hasSession && result.active) {\n            setSession(result.active);\n            setHasSession(true);\n          } else if (hasSession && !result.active) {\n            setHasSession(false);\n          }\n        });\n      } else if (data.status === 403) {\n        forceLogout();\n      } else {\n        data.json().then(result => {\n          changeAlert('danger', result.error);\n        });\n      }\n    });\n  };\n\n  const deleteGame = () => {\n    fetch('http://localhost:5005/admin/quiz/' + quiz.id, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then(result => {\n          changeAlert('success', 'You have deleted \"' + name + '\"');\n          setShow();\n        });\n      } else if (data.status === 403) {\n        forceLogout();\n      } else {\n        data.json().then(result => {\n          changeAlert('danger', result.error);\n        });\n      }\n    });\n  };\n\n  const copySession = () => {\n    navigator.clipboard.writeText('http://localhost:3000/join/' + session);\n  };\n\n  React.useEffect(() => {\n    getInfo(true);\n  }, []);\n  React.useEffect(() => {\n    console.log(initialisation.current);\n\n    if (initialisation.current) {\n      initialisation.current = false;\n    } else if (hasSession) {\n      setPopup( /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"You have started a session for \\\"\", name, \"\\\"!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Session ID: \", session, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: copySession,\n                children: \"Copy link\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 40\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), closeBtn]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false));\n    } else {\n      setPopup( /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"You have stopped the session for \\\"\", name, \"\\\"!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: '/results/' + session,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"See results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), closeBtn]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false));\n    }\n  }, [hasSession]);\n  let img = null;\n\n  if (thumbnail) {\n    img = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: thumbnail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }, this);\n  }\n\n  if (show) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: quiz.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), questions, /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Number of questions: \", nQuestions]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Time: \", (time / 60).toFixed(1), \" mins\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), img, /*#__PURE__*/_jsxDEV(Link, {\n            to: \"gameQuestions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              children: \"Access\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: '/edit/' + quiz.id,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: deleteGame,\n            className: \"btn btn-primary\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), popupArea]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    return null;\n  }\n}\n\n_s(GameBoard, \"+t1UgUSUJ9KsthTC4Hz/dim4mlg=\");\n\n_c = GameBoard;\nGameBoard.propTypes = {\n  quiz: propTypes.object,\n  changeAlert: propTypes.func,\n  forceLogout: propTypes.func\n};\nexport default GameBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"sources":["/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/elements/gameBoard.jsx"],"names":["React","propTypes","Cookies","Link","GameBoard","quiz","changeAlert","forceLogout","cookies","show","setShow","useState","name","setName","questions","setQuestions","thumbnail","setThumbnail","nQuestions","setNQuestions","time","setTime","session","setSession","active","hasSession","setHasSession","initialisation","useRef","popupArea","setPopup","closeBtn","createElement","onClick","getInfo","fetch","id","method","headers","Accept","Authorization","get","then","data","status","json","result","length","map","que","description","timeTmp","forEach","q","error","deleteGame","copySession","navigator","clipboard","writeText","useEffect","console","log","current","img","toFixed","object","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport Cookies from 'universal-cookie';\nimport {\n  Link\n} from 'react-router-dom';\nfunction GameBoard ({ quiz, changeAlert, forceLogout }) {\n  const cookies = new Cookies();\n  const [show, setShow] = React.useState(true);\n  const [name, setName] = React.useState(quiz.name);\n  const [questions, setQuestions] = React.useState(quiz.questions);\n  const [thumbnail, setThumbnail] = React.useState(quiz.thumbnail);\n  const [nQuestions, setNQuestions] = React.useState(0);\n  const [time, setTime] = React.useState(0);\n  const [session, setSession] = React.useState(quiz.active);\n  const [hasSession, setHasSession] = React.useState(quiz.active !== null);\n  const initialisation = React.useRef(true);\n  const [popupArea, setPopup] = React.useState(null);\n\n  const closeBtn = React.createElement('button', {\n    onClick: () => { setPopup(null); }\n  }, 'Close');\n\n  const getInfo = () => {\n    fetch('http://localhost:5005/admin/quiz/' + quiz.id, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then((result) => {\n          setName(result.name);\n          setNQuestions(result.questions.length);\n          setQuestions(result.questions.map(que => {\n            return <p key={que.description}>{que.description}</p>;\n          }));\n          setThumbnail(result.thumbnail);\n          let timeTmp = 0;\n          result.questions.forEach((q) => {\n            timeTmp += q.time;\n          });\n          setTime(timeTmp);\n          if (!hasSession && result.active) {\n            setSession(result.active);\n            setHasSession(true);\n          } else if (hasSession && !result.active) {\n            setHasSession(false);\n          }\n        });\n      } else if (data.status === 403) {\n        forceLogout();\n      } else {\n        data.json().then((result) => {\n          changeAlert('danger', result.error);\n        });\n      }\n    });\n  };\n  const deleteGame = () => {\n    fetch('http://localhost:5005/admin/quiz/' + quiz.id, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then((result) => {\n          changeAlert('success', 'You have deleted \"' + name + '\"');\n          setShow();\n        });\n      } else if (data.status === 403) {\n        forceLogout();\n      } else {\n        data.json().then((result) => {\n          changeAlert('danger', result.error);\n        });\n      }\n    });\n  };\n  const copySession = () => {\n    navigator.clipboard.writeText('http://localhost:3000/join/' + session);\n  };\n\n  React.useEffect(() => {\n    getInfo(true);\n  }, []);\n  React.useEffect(() => {\n    console.log(initialisation.current);\n    if (initialisation.current) {\n      initialisation.current = false;\n    } else if (hasSession) {\n      setPopup(\n        <>\n          <div\n            className=\"popup\"\n          >\n            <div>\n              <p>You have started a session for &quot;{name}&quot;!</p>\n              <p>Session ID: {session} <button onClick={copySession}>Copy link</button></p>\n            </div>\n            {closeBtn}\n          </div>\n        </>\n      );\n    } else {\n      setPopup(\n        <>\n          <div\n            className=\"popup\"\n          >\n            <div>\n              <p>You have stopped the session for &quot;{name}&quot;!</p>\n              <Link\n                to={'/results/' + session}\n              >\n                <button>\n                  See results\n                </button>\n              </Link>\n            </div>\n            {closeBtn}\n          </div>\n        </>\n      );\n    }\n  }, [hasSession]);\n\n  let img = null;\n  if (thumbnail) {\n    img = <div><img src={thumbnail} /></div>;\n  }\n\n  if (show) {\n    return (\n      <>\n        <ul className=\"list-group\">\n          <li className=\"list-group-item\">\n            <h3>{quiz.name}</h3>\n            {questions}\n            <p>Number of questions: {nQuestions}</p>\n            <p>Time: {(time / 60).toFixed(1)} mins</p>\n            {img}\n            <Link\n              to='gameQuestions'\n            >\n              <button\n              className='btn btn-primary'\n              >\n                Access\n              </button>\n            </Link>\n            <Link\n              to={'/edit/' + quiz.id}\n            >\n            <button\n              className='btn btn-primary'\n            >\n              Edit\n            </button>\n            </Link>\n            <button\n              onClick={deleteGame}\n              className='btn btn-primary'\n            >\n              Delete\n            </button>\n            {popupArea}\n          </li>\n        </ul>\n      </>\n    );\n  } else {\n    return null;\n  }\n}\n\nGameBoard.propTypes = {\n  quiz: propTypes.object,\n  changeAlert: propTypes.func,\n  forceLogout: propTypes.func\n};\n\nexport default GameBoard;\n"]},"metadata":{},"sourceType":"module"}