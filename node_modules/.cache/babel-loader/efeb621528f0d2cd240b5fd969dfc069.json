{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/elements/gameBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport Cookies from 'universal-cookie';\nimport { Link } from 'react-router-dom';\n\nfunction GameBoard({\n  quiz,\n  changeAlert,\n  forceLogout\n}) {\n  _s();\n\n  const cookies = new Cookies();\n  const [show, setShow] = React.useState(true);\n  const [nQuestions, setNQuestions] = React.useState(0);\n  let img = null;\n\n  if (quiz.thumbnail) {\n    img = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: quiz.thumbnail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this);\n  }\n\n  React.useEffect(() => {\n    fetch('http://localhost:5005/admin/quiz/' + quiz.id, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then(result => {\n          setNQuestions(result.questions.length);\n        });\n      } else if (data.status === 403) {\n        forceLogout();\n      } else {\n        data.json().then(result => {\n          changeAlert('danger', result.error);\n        });\n      }\n    });\n  }, []);\n\n  const deleteGame = () => {\n    fetch('http://localhost:5005/admin/quiz/' + quiz.id, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then(result => {\n          changeAlert('success', 'You have deleted \"' + quiz.name + '\"');\n          setShow(false);\n        });\n      } else if (data.status === 403) {\n        forceLogout();\n      } else {\n        data.json().then(result => {\n          changeAlert('danger', result.error);\n        });\n      }\n    });\n  };\n\n  if (show) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: quiz.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Number of questions: \", nQuestions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), img, /*#__PURE__*/_jsxDEV(Link, {\n          to: '/edit/' + quiz.id,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deleteGame,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    return null;\n  }\n}\n\n_s(GameBoard, \"UJWQxd5SBcLq2DAtVXlyu/ULlAc=\");\n\n_c = GameBoard;\nGameBoard.propTypes = {\n  quiz: propTypes.object,\n  changeAlert: propTypes.func,\n  forceLogout: propTypes.func\n};\nexport default GameBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"sources":["/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/elements/gameBoard.jsx"],"names":["React","propTypes","Cookies","Link","GameBoard","quiz","changeAlert","forceLogout","cookies","show","setShow","useState","nQuestions","setNQuestions","img","thumbnail","useEffect","fetch","id","method","headers","Accept","Authorization","get","then","data","status","json","result","questions","length","error","deleteGame","name","object","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport Cookies from 'universal-cookie';\nimport {\n  Link\n} from 'react-router-dom';\n\nfunction GameBoard ({ quiz, changeAlert, forceLogout }) {\n  const cookies = new Cookies();\n  const [show, setShow] = React.useState(true);\n  const [nQuestions, setNQuestions] = React.useState(0);\n\n  let img = null;\n  if (quiz.thumbnail) {\n    img = <img src={quiz.thumbnail} />;\n  }\n\n  React.useEffect(() => {\n    fetch('http://localhost:5005/admin/quiz/' + quiz.id, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then((result) => {\n          setNQuestions(result.questions.length);\n        });\n      } else if (data.status === 403) {\n        forceLogout();\n      } else {\n        data.json().then((result) => {\n          changeAlert('danger', result.error);\n        });\n      }\n    });\n  }, []);\n\n  const deleteGame = () => {\n    fetch('http://localhost:5005/admin/quiz/' + quiz.id, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then((result) => {\n          changeAlert('success', 'You have deleted \"' + quiz.name + '\"');\n          setShow(false);\n        });\n      } else if (data.status === 403) {\n        forceLogout();\n      } else {\n        data.json().then((result) => {\n          changeAlert('danger', result.error);\n        });\n      }\n    });\n  };\n\n  if (show) {\n    return (\n      <>\n        <div>\n          <h3>{quiz.name}</h3>\n          <p>Number of questions: {nQuestions}</p>\n          {img}\n          <Link\n            to={'/edit/' + quiz.id}\n          >\n            <button>Edit</button>\n          </Link>\n          <button\n            onClick={deleteGame}\n          >\n            Delete\n          </button>\n        </div>\n      </>\n    );\n  } else {\n    return null;\n  }\n}\n\nGameBoard.propTypes = {\n  quiz: propTypes.object,\n  changeAlert: propTypes.func,\n  forceLogout: propTypes.func\n};\n\nexport default GameBoard;\n"]},"metadata":{},"sourceType":"module"}