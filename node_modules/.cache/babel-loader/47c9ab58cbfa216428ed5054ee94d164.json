{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/pages/results.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Table from 'react-bootstrap/Table';\nimport propTypes from 'prop-types';\nimport Cookies from 'universal-cookie';\nimport { Redirect, useParams } from 'react-router-dom';\n\nfunction Result({\n  changeAlert,\n  forceLogout\n}) {\n  _s();\n\n  const cookies = new Cookies();\n  const {\n    session\n  } = useParams();\n  const [redirect, setRedirect] = React.useState('');\n  const [questions, setQuestions] = React.useState([]);\n  const [ranking, setRanking] = React.useState(null);\n  React.useEffect(() => {\n    fetch('http://localhost:5005/admin/session/' + session + '/status', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then(result => {\n          setQuestions(result.results.questions);\n        });\n      } else if (data.status === 403) {\n        forceLogout();\n        setRedirect('/login');\n      } else {\n        data.json().then(result => {\n          changeAlert('danger', result.error);\n          setRedirect('/dashboard');\n        });\n      }\n    });\n  }, []);\n  React.useEffect(() => {\n    if (questions.length > 0) {\n      fetch('http://localhost:5005/admin/session/' + session + '/results', {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + cookies.get('token')\n        }\n      }).then(data => {\n        if (data.status === 200) {\n          data.json().then(result => {\n            const newRanking = [];\n\n            for (let i = 0; i < result.results.length; i++) {\n              const player = result.results[i];\n              let score = 0;\n\n              for (let j = 0; j < player.answers.length; j++) {\n                const a = player.answers[j];\n\n                if (a.correct) {\n                  score += questions[j].point;\n                }\n              }\n\n              newRanking.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: player.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: score\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this)]\n              }, player.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this));\n            }\n\n            setRanking(newRanking);\n          });\n        } else if (data.status === 403) {\n          forceLogout();\n          setRedirect('/login');\n        } else {\n          data.json().then(result => {\n            changeAlert('danger', result.error);\n            setRedirect('/dashboard');\n          });\n        }\n      });\n    }\n  }, [questions]);\n\n  if (redirect === '') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-group\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        size: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: ranking\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      push: true,\n      to: redirect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Result, \"L93nEXTCCD3Yzy0CjhZCvGKSc9k=\", false, function () {\n  return [useParams];\n});\n\n_c = Result;\nResult.propTypes = {\n  changeAlert: propTypes.func,\n  forceLogout: propTypes.func\n};\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/pages/results.jsx"],"names":["React","Table","propTypes","Cookies","Redirect","useParams","Result","changeAlert","forceLogout","cookies","session","redirect","setRedirect","useState","questions","setQuestions","ranking","setRanking","useEffect","fetch","method","headers","Accept","Authorization","get","then","data","status","json","result","results","error","length","newRanking","i","player","score","j","answers","a","correct","point","push","name","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Table from 'react-bootstrap/Table';\nimport propTypes from 'prop-types';\nimport Cookies from 'universal-cookie';\nimport {\n  Redirect,\n  useParams\n} from 'react-router-dom';\n\nfunction Result ({ changeAlert, forceLogout }) {\n  const cookies = new Cookies();\n  const { session } = useParams();\n  const [redirect, setRedirect] = React.useState('');\n  const [questions, setQuestions] = React.useState([]);\n  const [ranking, setRanking] = React.useState(null);\n\n  React.useEffect(() => {\n    fetch('http://localhost:5005/admin/session/' + session + '/status', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then((result) => {\n          setQuestions(result.results.questions);\n        });\n      } else if (data.status === 403) {\n        forceLogout();\n        setRedirect('/login');\n      } else {\n        data.json().then((result) => {\n          changeAlert('danger', result.error);\n          setRedirect('/dashboard');\n        });\n      }\n    });\n  }, []);\n\n  React.useEffect(() => {\n    if (questions.length > 0) {\n      fetch('http://localhost:5005/admin/session/' + session + '/results', {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + cookies.get('token')\n        }\n      }).then(data => {\n        if (data.status === 200) {\n          data.json().then((result) => {\n            const newRanking = [];\n            for (let i = 0; i < result.results.length; i++) {\n              const player = result.results[i];\n              let score = 0;\n              for (let j = 0; j < player.answers.length; j++) {\n                const a = player.answers[j];\n                if (a.correct) {\n                  score += questions[j].point;\n                }\n              }\n              newRanking.push(\n                <tr key={player.name}>\n                  <td></td>\n                  <td>{player.name}</td>\n                  <td>{score}</td>\n                </tr>\n              );\n            }\n            setRanking(newRanking);\n          });\n        } else if (data.status === 403) {\n          forceLogout();\n          setRedirect('/login');\n        } else {\n          data.json().then((result) => {\n            changeAlert('danger', result.error);\n            setRedirect('/dashboard');\n          });\n        }\n      });\n    }\n  }, [questions])\n\n  if (redirect === '') {\n    return (\n      <div className=\"list-group\">\n        <Table striped bordered hover size=\"sm\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Name</th>\n              <th>Score</th>\n            </tr>\n          </thead>\n          <tbody>\n            {ranking}\n          </tbody>\n        </Table>\n      </div>\n    );\n  } else {\n    return (\n      <Redirect push to={redirect} />\n    );\n  }\n}\n\nResult.propTypes = {\n  changeAlert: propTypes.func,\n  forceLogout: propTypes.func\n};\n\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}