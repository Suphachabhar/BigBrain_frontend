{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/elements/editGameBorad.jsx\";\nimport React from 'react';\n\nfunction Edit() {\n  const getInfo = () => {\n    fetch('http://localhost:5005/admin/quiz/' + quiz.id, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then(result => {\n          setName(result.name);\n          setNQuestions(result.questions.length);\n          setThumbnail(result.thumbnail);\n          let timeTmp = 0;\n          result.questions.forEach(q => {\n            timeTmp += q.time;\n          });\n          setTime(timeTmp);\n\n          if (!hasSession && result.active) {\n            setSession(result.active);\n            setHasSession(true);\n          } else if (hasSession && !result.active) {\n            setHasSession(false);\n          }\n        });\n      } else if (data.status === 403) {\n        forceLogout();\n      } else {\n        data.json().then(result => {\n          changeAlert('danger', result.error);\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    children: \"Edit\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Edit;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/elements/editGameBorad.jsx"],"names":["React","Edit","getInfo","fetch","quiz","id","method","headers","Accept","Authorization","cookies","get","then","data","status","json","result","setName","name","setNQuestions","questions","length","setThumbnail","thumbnail","timeTmp","forEach","q","time","setTime","hasSession","active","setSession","setHasSession","forceLogout","changeAlert","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,IAAT,GAAiB;AAAC,QAAMC,OAAO,GAAG,MAAM;AACtCC,IAAAA,KAAK,CAAC,sCAAsCC,IAAI,CAACC,EAA5C,EAAgD;AACnDC,MAAAA,MAAM,EAAE,KAD2C;AAEnDC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB,kBAFT;AAGPC,QAAAA,aAAa,EAAE,YAAYC,OAAO,CAACC,GAAR,CAAY,OAAZ;AAHpB;AAF0C,KAAhD,CAAL,CAOGC,IAPH,CAOQC,IAAI,IAAI;AACd,UAAIA,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AACvBD,QAAAA,IAAI,CAACE,IAAL,GAAYH,IAAZ,CAAkBI,MAAD,IAAY;AAC3BC,UAAAA,OAAO,CAACD,MAAM,CAACE,IAAR,CAAP;AACAC,UAAAA,aAAa,CAACH,MAAM,CAACI,SAAP,CAAiBC,MAAlB,CAAb;AACAC,UAAAA,YAAY,CAACN,MAAM,CAACO,SAAR,CAAZ;AACA,cAAIC,OAAO,GAAG,CAAd;AACAR,UAAAA,MAAM,CAACI,SAAP,CAAiBK,OAAjB,CAA0BC,CAAD,IAAO;AAC9BF,YAAAA,OAAO,IAAIE,CAAC,CAACC,IAAb;AACD,WAFD;AAGAC,UAAAA,OAAO,CAACJ,OAAD,CAAP;;AACA,cAAI,CAACK,UAAD,IAAeb,MAAM,CAACc,MAA1B,EAAkC;AAChCC,YAAAA,UAAU,CAACf,MAAM,CAACc,MAAR,CAAV;AACAE,YAAAA,aAAa,CAAC,IAAD,CAAb;AACD,WAHD,MAGO,IAAIH,UAAU,IAAI,CAACb,MAAM,CAACc,MAA1B,EAAkC;AACvCE,YAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,SAfD;AAgBD,OAjBD,MAiBO,IAAInB,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AAC9BmB,QAAAA,WAAW;AACZ,OAFM,MAEA;AACLpB,QAAAA,IAAI,CAACE,IAAL,GAAYH,IAAZ,CAAkBI,MAAD,IAAY;AAC3BkB,UAAAA,WAAW,CAAC,QAAD,EAAWlB,MAAM,CAACmB,KAAlB,CAAX;AACD,SAFD;AAGD;AACF,KAhCD;AAiCC,GAlCe;;AAoChB,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;KAvCQlC,I;AAyCT,eAAeA,IAAf","sourcesContent":["import React from 'react'\n\nfunction Edit () {const getInfo = () => {\n  fetch('http://localhost:5005/admin/quiz/' + quiz.id, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + cookies.get('token')\n    }\n  }).then(data => {\n    if (data.status === 200) {\n      data.json().then((result) => {\n        setName(result.name);\n        setNQuestions(result.questions.length);\n        setThumbnail(result.thumbnail);\n        let timeTmp = 0;\n        result.questions.forEach((q) => {\n          timeTmp += q.time;\n        });\n        setTime(timeTmp);\n        if (!hasSession && result.active) {\n          setSession(result.active);\n          setHasSession(true);\n        } else if (hasSession && !result.active) {\n          setHasSession(false);\n        }\n      });\n    } else if (data.status === 403) {\n      forceLogout();\n    } else {\n      data.json().then((result) => {\n        changeAlert('danger', result.error);\n      });\n    }\n  });\n  };\n\n  return (\n    <button>Edit</button>\n  );\n}\n\nexport default Edit;\n"]},"metadata":{},"sourceType":"module"}