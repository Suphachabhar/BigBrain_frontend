{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/elements/editGameBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router';\nimport Cookies from 'universal-cookie';\nimport { Link } from 'react-router-dom';\nimport propTypes from 'prop-types';\n\nfunction Edit({\n  changeAlert\n}) {\n  _s();\n\n  const cookies = new Cookies();\n  const {\n    id\n  } = useParams();\n  const [questions, setQuestions] = React.useState(null);\n  const [quiz, setQuiz] = React.useState([]);\n  const [name, setName] = React.useState('');\n  const [thumbnail, setThumbnail] = React.useState('');\n  React.useEffect(() => {\n    fetch('http://localhost:5005/admin/quiz/' + id, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then(result => {\n          setQuiz(result.questions);\n          console.log(result.questions);\n          setName(result.name);\n          setThumbnail(result.thumbnail);\n          setQuestions(result.questions.map(question => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [question.description, /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: '/edit/' + id + '/' + question.id,\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 45,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: deleteQuestion,\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 46,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 19\n                }, this)]\n              }, question.description, true, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this)\n            }, void 0, false);\n          }));\n        });\n      }\n    });\n  }, []);\n\n  const deleteQuestion = () => {\n    console.log(result.questions);\n    fetch('http://localhost:5005/admin/quiz/' + id, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      },\n      body: JSON.stringify({\n        questions: quiz,\n        name: name,\n        thumbnail: thumbnail\n      })\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then(result => {\n          changeAlert('success', 'You have deleted \"' + name + '\"');\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Question board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: questions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Edit, \"MYx9c/IHT+K6wtSQoHZjoGmcbnY=\", false, function () {\n  return [useParams];\n});\n\n_c = Edit;\nEdit.propTypes = {\n  changeAlert: propTypes.func\n};\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/elements/editGameBoard.jsx"],"names":["React","useParams","Cookies","Link","propTypes","Edit","changeAlert","cookies","id","questions","setQuestions","useState","quiz","setQuiz","name","setName","thumbnail","setThumbnail","useEffect","fetch","method","headers","Accept","Authorization","get","then","data","status","json","result","console","log","map","question","description","deleteQuestion","body","JSON","stringify","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router';\nimport Cookies from 'universal-cookie';\nimport {\n  Link\n} from 'react-router-dom';\nimport propTypes from 'prop-types';\n\nfunction Edit ({ changeAlert }) {\n  const cookies = new Cookies();\n  const { id } = useParams();\n  const [questions, setQuestions] = React.useState(null);\n  const [quiz, setQuiz] = React.useState([]);\n  const [name, setName] = React.useState('');\n  const [thumbnail, setThumbnail] = React.useState('');\n\n  React.useEffect(() => {\n    fetch('http://localhost:5005/admin/quiz/' + id, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then((result) => {\n          setQuiz(result.questions);\n          console.log(result.questions);\n          setName(result.name);\n          setThumbnail(result.thumbnail);\n\n          setQuestions(result.questions.map(question => {\n            return (\n              <>\n                <p\n                  key={question.description}\n                >\n                  {question.description}\n                  <span\n                  >\n                    <Link\n                        to={'/edit/' + id + '/' + question.id}\n                      >\n                        <button>Edit</button>\n                        <button onClick={deleteQuestion}>Delete</button>\n                      </Link>\n                  </span>\n                </p>\n              </>\n            );\n          }))\n        })\n      }\n    })\n  }, []);\n\n  const deleteQuestion = () => {\n    console.log(result.questions);\n    fetch('http://localhost:5005/admin/quiz/' + id, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      },\n      body: JSON.stringify({\n        questions: quiz,\n        name: name,\n        thumbnail: thumbnail\n      }),\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then((result) => {\n          changeAlert('success', 'You have deleted \"' + name + '\"');\n        });\n      }\n    });\n  };\n\n  return (\n    <div>\n      <h1\n      >\n        Question board\n      </h1>\n      <button>Create</button>\n      <p>{questions}</p>\n    </div>\n  );\n}\n\nEdit.propTypes = {\n  changeAlert: propTypes.func\n};\n\nexport default Edit;\n"]},"metadata":{},"sourceType":"module"}