{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/elements/editQuestions.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { OptionStyle } from '../components/OptionStyle.styles';\nimport { useParams } from 'react-router';\nimport Cookies from 'universal-cookie';\nimport propTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nfunction EditQuestion({\n  changeAlert,\n  forceLogout\n}) {\n  _s();\n\n  const cookies = new Cookies();\n  const {\n    id,\n    qid\n  } = useParams();\n  const [redirect, setRedirect] = React.useState('');\n  const [updateType, setUpdateType] = React.useState('multiple');\n  const [numAnswer, setNumAnswer] = React.useState('1');\n  const [game, setGame] = React.useState(null);\n  const [question, setQuestion] = React.useState('');\n  const [time, setTime] = React.useState(0);\n  const [point, setPoint] = React.useState(0);\n  const [src, setSrc] = React.useState('');\n  const answers = [];\n  const setAnswers = [];\n\n  for (let i = 0; i < 6; i++) {\n    const [answer, setAnswer] = React.useState('');\n    answers.push(answer);\n    setAnswers.push(setAnswer);\n  }\n\n  const correct = [];\n  const setCorrect = [];\n\n  for (let i = 0; i < 6; i++) {\n    const [isCorrect, setIsCorrect] = React.useState(false);\n    correct.push(isCorrect);\n    setCorrect.push(setIsCorrect);\n  }\n\n  const [inputs, setInputs] = React.useState(null);\n  const [ready, setReady] = React.useState(false);\n  React.useEffect(() => {\n    fetch('http://localhost:5005/admin/quiz/' + id, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then(result => {\n          if (qid < result.questions.length) {\n            setGame(result);\n            const target = result.questions[qid];\n            setQuestion(target.description);\n            setTime(target.time);\n            setPoint(target.point);\n\n            if (target.src) {\n              setSrc(target.src.split('/').pop());\n            }\n\n            for (let i = 0; i < target.choices.length; i++) {\n              setAnswers[i](target.choices[i].choice);\n              setCorrect[i](target.answers.includes(target.choices[i].id));\n            }\n\n            setReady(true);\n          } else {\n            changeAlert('danger', result.error);\n            setRedirect('/edit/' + id);\n          }\n        });\n      } else if (data.status === 403) {\n        forceLogout();\n        setRedirect('/login');\n      } else {\n        data.json().then(result => {\n          changeAlert('danger', result.error);\n          setRedirect('/dashboard');\n        });\n      }\n    });\n  }, []);\n  React.useEffect(() => {\n    if (updateType === 'single') {\n      setNumAnswer('0');\n    } else {\n      setNumAnswer('1');\n    }\n  }, [updateType]);\n\n  const updateValue = e => {\n    setUpdateType(e.target.value);\n  };\n\n  const changeQ = () => {\n    let valid = true;\n    const choicesJSON = [];\n    const answersJSON = [];\n\n    if (question === '') {\n      valid = false;\n      changeAlert('danger', 'You must add a description for the question');\n    } else if (time <= 0 || point <= 0) {\n      valid = false;\n      changeAlert('danger', 'You must add a valid value for time and point (>0)');\n    } else {\n      let id = 1;\n\n      for (let i = 0; i < 6; i++) {\n        if (answers[i] !== '') {\n          choicesJSON.push({\n            id: id,\n            choice: answers[i]\n          });\n\n          if (correct[i]) {\n            answersJSON.push(id);\n          }\n\n          id++;\n        }\n      }\n\n      if (choicesJSON.length < 2) {\n        valid = false;\n        changeAlert('danger', 'The question must have 2-6 choices');\n      } else if (answersJSON.length < 1) {\n        valid = false;\n        changeAlert('danger', 'The question must have correct answer');\n      } else if (numAnswer === '0' && answersJSON.length > 1) {\n        valid = false;\n        changeAlert('danger', 'The single-choice question can only have 1 correct answer');\n      }\n    }\n\n    if (valid) {\n      const newQuiz = [];\n      const i = parseInt(qid);\n\n      for (let j = 0; j < game.questions.length; j++) {\n        if (j === i) {\n          newQuiz.push({\n            description: question,\n            time: time,\n            point: point,\n            src: src === '' ? null : 'http://www.youtube.com/embed/' + src,\n            choices: choicesJSON,\n            answers: answersJSON\n          });\n        } else {\n          newQuiz.push(game.questions[j]);\n        }\n      }\n\n      fetch('http://localhost:5005/admin/quiz/' + id, {\n        method: 'PUT',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + cookies.get('token')\n        },\n        body: JSON.stringify({\n          questions: newQuiz,\n          name: game.name,\n          thumbnail: game.thumbnail\n        })\n      }).then(data => {\n        if (data.status === 200) {\n          changeAlert('success', 'You have updated a question');\n          setRedirect('/edit/' + id);\n        } else if (data.status === 403) {\n          forceLogout();\n          setRedirect('/login');\n        } else {\n          data.json().then(result => {\n            changeAlert('danger', result.error);\n          });\n        }\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    if (ready) {\n      const answerArea = [];\n\n      for (let i = 0; i < 6; i++) {\n        answerArea.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Answer\",\n              defaultValue: answers[i],\n              onChange: e => {\n                setAnswers[i](e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              defaultChecked: correct[i],\n              onChange: () => {\n                setCorrect[i](!correct[i]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Correct answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false));\n      }\n\n      setInputs( /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-floating\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"sr-only\",\n            children: \"Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Questions\",\n            defaultValue: question,\n            onChange: e => {\n              setQuestion(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"sr-only\",\n            children: \"Time limit (seconds)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            placeholder: \"Time limit (seconds)\",\n            defaultValue: time,\n            onChange: e => {\n              if (e.target.value === '') {\n                setTime(0);\n              } else {\n                setTime(parseInt(e.target.value));\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"sr-only\",\n            children: \"Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            placeholder: \"Points\",\n            defaultValue: point,\n            onChange: e => {\n              if (e.target.value === '') {\n                setPoint(0);\n              } else {\n                setPoint(parseInt(e.target.value));\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"sr-only\",\n            children: \"URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"YouTube ID (optional)\",\n            defaultValue: src,\n            onChange: e => {\n              setSrc(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Answers:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), answerArea]\n      }, void 0, true));\n    }\n  }, [ready]);\n\n  if (redirect === '') {\n    return /*#__PURE__*/_jsxDEV(\"body\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"firstsection\",\n          children: \"Edit question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-floating\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Question:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(OptionStyle, {\n            change: updateValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), inputs, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-lg btn-primary btn-block btn-sm\",\n          onClick: changeQ,\n          children: \"Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      push: true,\n      to: redirect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(EditQuestion, \"E5eYvsNsk6zr6M06tMCg5Qxv7ww=\", false, function () {\n  return [useParams];\n});\n\n_c = EditQuestion;\nEditQuestion.propTypes = {\n  changeAlert: propTypes.func,\n  forceLogout: propTypes.func\n};\nexport default EditQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditQuestion\");","map":{"version":3,"sources":["/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/elements/editQuestions.jsx"],"names":["React","OptionStyle","useParams","Cookies","propTypes","Redirect","EditQuestion","changeAlert","forceLogout","cookies","id","qid","redirect","setRedirect","useState","updateType","setUpdateType","numAnswer","setNumAnswer","game","setGame","question","setQuestion","time","setTime","point","setPoint","src","setSrc","answers","setAnswers","i","answer","setAnswer","push","correct","setCorrect","isCorrect","setIsCorrect","inputs","setInputs","ready","setReady","useEffect","fetch","method","headers","Accept","Authorization","get","then","data","status","json","result","questions","length","target","description","split","pop","choices","choice","includes","error","updateValue","e","value","changeQ","valid","choicesJSON","answersJSON","newQuiz","parseInt","j","body","JSON","stringify","name","thumbnail","answerArea","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { OptionStyle } from '../components/OptionStyle.styles';\nimport { useParams } from 'react-router';\nimport Cookies from 'universal-cookie';\nimport propTypes from 'prop-types';\nimport {\n  Redirect\n} from 'react-router-dom';\n\nfunction EditQuestion ({ changeAlert, forceLogout }) {\n  const cookies = new Cookies();\n  const { id, qid } = useParams();\n  const [redirect, setRedirect] = React.useState('');\n  const [updateType, setUpdateType] = React.useState('multiple');\n  const [numAnswer, setNumAnswer] = React.useState('1');\n  const [game, setGame] = React.useState(null);\n  const [question, setQuestion] = React.useState('');\n  const [time, setTime] = React.useState(0);\n  const [point, setPoint] = React.useState(0);\n  const [src, setSrc] = React.useState('');\n  const answers = [];\n  const setAnswers = [];\n  for (let i = 0; i < 6; i++) {\n    const [answer, setAnswer] = React.useState('');\n    answers.push(answer);\n    setAnswers.push(setAnswer);\n  }\n  const correct = [];\n  const setCorrect = [];\n  for (let i = 0; i < 6; i++) {\n    const [isCorrect, setIsCorrect] = React.useState(false);\n    correct.push(isCorrect);\n    setCorrect.push(setIsCorrect);\n  }\n\n  const [inputs, setInputs] = React.useState(null);\n  const [ready, setReady] = React.useState(false);\n\n  React.useEffect(() => {\n    fetch('http://localhost:5005/admin/quiz/' + id, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then((result) => {\n          if (qid < result.questions.length) {\n            setGame(result);\n            const target = result.questions[qid];\n            setQuestion(target.description);\n            setTime(target.time);\n            setPoint(target.point);\n            if (target.src) {\n              setSrc(target.src.split('/').pop());\n            }\n            for (let i = 0; i < target.choices.length; i++) {\n              setAnswers[i](target.choices[i].choice);\n              setCorrect[i](target.answers.includes(target.choices[i].id));\n            }\n            setReady(true);\n          } else {\n            changeAlert('danger', result.error);\n            setRedirect('/edit/' + id);\n          }\n        });\n      } else if (data.status === 403) {\n        forceLogout();\n        setRedirect('/login');\n      } else {\n        data.json().then((result) => {\n          changeAlert('danger', result.error);\n          setRedirect('/dashboard');\n        });\n      }\n    });\n  }, []);\n  React.useEffect(() => {\n    if (updateType === 'single') {\n      setNumAnswer('0');\n    } else {\n      setNumAnswer('1');\n    }\n  }, [updateType]);\n\n  const updateValue = (e) => {\n    setUpdateType(e.target.value);\n  }\n\n  const changeQ = () => {\n    let valid = true;\n    const choicesJSON = [];\n    const answersJSON = [];\n    if (question === '') {\n      valid = false;\n      changeAlert('danger', 'You must add a description for the question');\n    } else if (time <= 0 || point <= 0) {\n      valid = false;\n      changeAlert('danger', 'You must add a valid value for time and point (>0)');\n    } else {\n      let id = 1;\n      for (let i = 0; i < 6; i++) {\n        if (answers[i] !== '') {\n          choicesJSON.push({\n            id: id,\n            choice: answers[i]\n          });\n          if (correct[i]) {\n            answersJSON.push(id);\n          }\n          id++;\n        }\n      }\n      if (choicesJSON.length < 2) {\n        valid = false;\n        changeAlert('danger', 'The question must have 2-6 choices');\n      } else if (answersJSON.length < 1) {\n        valid = false;\n        changeAlert('danger', 'The question must have correct answer');\n      } else if (numAnswer === '0' && answersJSON.length > 1) {\n        valid = false;\n        changeAlert('danger', 'The single-choice question can only have 1 correct answer');\n      }\n    }\n\n    if (valid) {\n      const newQuiz = [];\n      const i = parseInt(qid);\n      for (let j = 0; j < game.questions.length; j++) {\n        if (j === i) {\n          newQuiz.push({\n            description: question,\n            time: time,\n            point: point,\n            src: src === '' ? null : ('http://www.youtube.com/embed/' + src),\n            choices: choicesJSON,\n            answers: answersJSON\n          });\n        } else {\n          newQuiz.push(game.questions[j]);\n        }\n      }\n\n      fetch('http://localhost:5005/admin/quiz/' + id, {\n        method: 'PUT',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + cookies.get('token')\n        },\n        body: JSON.stringify({\n          questions: newQuiz,\n          name: game.name,\n          thumbnail: game.thumbnail\n        })\n      }).then(data => {\n        if (data.status === 200) {\n          changeAlert('success', 'You have updated a question');\n          setRedirect('/edit/' + id);\n        } else if (data.status === 403) {\n          forceLogout();\n          setRedirect('/login');\n        } else {\n          data.json().then((result) => {\n            changeAlert('danger', result.error);\n          });\n        }\n      });\n    }\n  }\n\n  React.useEffect(() => {\n    if (ready) {\n      const answerArea = [];\n      for (let i = 0; i < 6; i++) {\n        answerArea.push(\n          <>\n            <div className='form-control' key={i}>\n              <input\n                type='text'\n                placeholder='Answer'\n                defaultValue={answers[i]}\n                onChange={(e) => { setAnswers[i](e.target.value); } }\n              ></input>\n              <input\n                type='checkbox'\n                defaultChecked={correct[i]}\n                onChange={() => { setCorrect[i](!correct[i]); }}\n              ></input>\n              <label>Correct answer</label>\n            </div>\n          </>\n        );\n      }\n      setInputs(\n        <>\n          <div\n          className='form-floating'\n          >\n            <label\n              className=\"sr-only\"\n            >\n              Questions\n            </label>\n            <input\n              type='text'\n              className='form-control'\n              placeholder='Questions'\n              defaultValue={question}\n              onChange={(e) => { setQuestion(e.target.value); }}\n            ></input>\n            <label\n              className=\"sr-only\"\n            >\n              Time limit (seconds)\n            </label>\n            <input\n              type='number'\n              className='form-control'\n              placeholder='Time limit (seconds)'\n              defaultValue={time}\n              onChange={(e) => {\n                if (e.target.value === '') {\n                  setTime(0);\n                } else {\n                  setTime(parseInt(e.target.value));\n                }\n              }}\n            ></input>\n            <label\n              className=\"sr-only\"\n            >\n              Points\n            </label>\n            <input\n              type='number'\n              className='form-control'\n              placeholder='Points'\n              defaultValue={point}\n              onChange={(e) => {\n                if (e.target.value === '') {\n                  setPoint(0);\n                } else {\n                  setPoint(parseInt(e.target.value));\n                }\n              }}\n            ></input>\n            <label\n              className=\"sr-only\"\n            >\n              URL\n            </label>\n            <input\n              type='text'\n              className='form-control'\n              placeholder='YouTube ID (optional)'\n              defaultValue={src}\n              onChange={(e) => { setSrc(e.target.value); }}\n            ></input>\n          </div>\n          <br />\n          <label>Answers:</label>\n          {answerArea}\n        </>\n      );\n    }\n  }, [ready]);\n\n  if (redirect === '') {\n    return (\n      <body\n        className=\"text-center\"\n      >\n        <div\n        >\n          <h1\n            className=\"firstsection\"\n          >\n            Edit question\n          </h1>\n          <br />\n          <div\n            className='form-floating'\n          >\n            <label>\n              Question:\n            </label>\n            <label>Type:</label>\n            <OptionStyle change={updateValue}/>\n          </div>\n          {inputs}\n          <br />\n          <button\n            className='btn btn-lg btn-primary btn-block btn-sm'\n            onClick={changeQ}\n          >\n            Change\n          </button>\n          <br />\n        </div>\n      </body>\n    );\n  } else {\n    return (\n      <Redirect push to={redirect} />\n    );\n  }\n}\n\nEditQuestion.propTypes = {\n  changeAlert: propTypes.func,\n  forceLogout: propTypes.func\n};\n\nexport default EditQuestion;\n"]},"metadata":{},"sourceType":"module"}