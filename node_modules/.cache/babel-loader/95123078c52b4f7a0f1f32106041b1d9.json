{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/elements/editGameBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router';\nimport Cookies from 'universal-cookie';\nimport { Redirect, Link } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { Header } from '../components/Header.styles';\n\nfunction Edit({\n  changeAlert,\n  forceLogout\n}) {\n  _s();\n\n  const cookies = new Cookies();\n  const {\n    id\n  } = useParams();\n  const [redirect, setRedirect] = React.useState('');\n  const [questions, setQuestions] = React.useState(null);\n  const [quiz, setQuiz] = React.useState([]);\n  const [name, setName] = React.useState('');\n  const [thumbnail, setThumbnail] = React.useState(null);\n  const initialisation = React.useRef(true); // fetch all the quiz infomation\n\n  React.useEffect(() => {\n    fetch('http://localhost:5005/admin/quiz/' + id, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then(result => {\n          setQuiz(result.questions);\n          setName(result.name);\n          setThumbnail(result.thumbnail);\n        });\n      }\n    });\n  }, []); // check the delete which question user delete\n\n  const deleteQuestion = i => {\n    const newQuiz = [];\n\n    for (let j = 0; j < quiz.length; j++) {\n      if (j !== i) {\n        newQuiz.push(quiz[j]);\n      }\n    }\n\n    fetch('http://localhost:5005/admin/quiz/' + id, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      },\n      body: JSON.stringify({\n        questions: newQuiz,\n        name: name,\n        thumbnail: thumbnail\n      })\n    }).then(data => {\n      if (data.status === 200) {\n        setQuiz(newQuiz);\n        data.json().then(result => {\n          changeAlert('success', 'You have deleted \"' + name + '\"');\n        });\n      } else if (data.status === 403) {\n        forceLogout();\n        setRedirect('/login');\n      } else {\n        data.json().then(result => {\n          changeAlert('danger', result.error);\n        });\n      }\n    });\n  };\n\n  React.useEffect(() => {\n    if (initialisation.current) {\n      initialisation.current = false;\n    } else {\n      const questionArea = [];\n\n      for (let i = 0; i < quiz.length; i++) {\n        const question = quiz[i];\n        questionArea.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: question.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: '/edit/' + id + '/' + i,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteQuestion(i),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false));\n      }\n\n      setQuestions(questionArea);\n    }\n  }, [quiz, name, thumbnail]);\n\n  if (redirect === '') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"firstsection\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          title: \"Question board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: '/createquestion/' + id,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            children: \"Create a new question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: questions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      push: true,\n      to: redirect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Edit, \"HgBjeSrpatLlolqIKzXp0u90w38=\", false, function () {\n  return [useParams];\n});\n\n_c = Edit;\nEdit.propTypes = {\n  changeAlert: propTypes.func,\n  forceLogout: propTypes.func\n};\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/elements/editGameBoard.jsx"],"names":["React","useParams","Cookies","Redirect","Link","propTypes","Header","Edit","changeAlert","forceLogout","cookies","id","redirect","setRedirect","useState","questions","setQuestions","quiz","setQuiz","name","setName","thumbnail","setThumbnail","initialisation","useRef","useEffect","fetch","method","headers","Accept","Authorization","get","then","data","status","json","result","deleteQuestion","i","newQuiz","j","length","push","body","JSON","stringify","error","current","questionArea","question","description","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router';\nimport Cookies from 'universal-cookie';\nimport {\n  Redirect,\n  Link\n} from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { Header } from '../components/Header.styles';\n\nfunction Edit ({ changeAlert, forceLogout }) {\n  const cookies = new Cookies();\n  const { id } = useParams();\n  const [redirect, setRedirect] = React.useState('');\n  const [questions, setQuestions] = React.useState(null);\n  const [quiz, setQuiz] = React.useState([]);\n  const [name, setName] = React.useState('');\n  const [thumbnail, setThumbnail] = React.useState(null);\n  const initialisation = React.useRef(true);\n\n  // fetch all the quiz infomation\n  React.useEffect(() => {\n    fetch('http://localhost:5005/admin/quiz/' + id, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then((result) => {\n          setQuiz(result.questions);\n          setName(result.name);\n          setThumbnail(result.thumbnail);\n        })\n      }\n    })\n  }, []);\n\n  // check the delete which question user delete\n  const deleteQuestion = (i) => {\n    const newQuiz = [];\n    for (let j = 0; j < quiz.length; j++) {\n      if (j !== i) {\n        newQuiz.push(quiz[j]);\n      }\n    }\n    fetch('http://localhost:5005/admin/quiz/' + id, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      },\n      body: JSON.stringify({\n        questions: newQuiz,\n        name: name,\n        thumbnail: thumbnail\n      })\n    }).then(data => {\n      if (data.status === 200) {\n        setQuiz(newQuiz);\n        data.json().then((result) => {\n          changeAlert('success', 'You have deleted \"' + name + '\"');\n        });\n      } else if (data.status === 403) {\n        forceLogout();\n        setRedirect('/login');\n      } else {\n        data.json().then((result) => {\n          changeAlert('danger', result.error);\n        });\n      }\n    });\n  };\n\n  React.useEffect(() => {\n    if (initialisation.current) {\n      initialisation.current = false;\n    } else {\n      const questionArea = [];\n      for (let i = 0; i < quiz.length; i++) {\n        const question = quiz[i];\n        questionArea.push(\n          <>\n            <ul\n              className=\"list-group\"\n              key={i}\n            >\n              <li\n                className=\"list-group-item\"\n              >\n                <p>{question.description}</p>\n                <br />\n                <Link\n                  to={'/edit/' + id + '/' + i}\n                >\n                  <button>Edit</button>\n                </Link>\n                <button onClick={() => deleteQuestion(i)}>Delete</button>\n              </li>\n            </ul>\n          </>\n        );\n      }\n      setQuestions(questionArea);\n    }\n  }, [quiz, name, thumbnail]);\n\n  if (redirect === '') {\n    return (\n      <>\n      <div className=\"firstsection\">\n        <Header title=\"Question board\"/>\n        <Link\n          to={'/createquestion/' + id}\n        >\n          <button\n          className='btn btn-primary'\n          >\n            Create a new question\n          </button>\n        </Link>\n      </div>\n      <div>{questions}</div>\n      </>\n    );\n  } else {\n    return (\n      <Redirect push to={redirect} />\n    );\n  }\n}\n\nEdit.propTypes = {\n  changeAlert: propTypes.func,\n  forceLogout: propTypes.func\n};\n\nexport default Edit;\n"]},"metadata":{},"sourceType":"module"}