{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/pages/play.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport Cookies from 'universal-cookie';\nimport { Redirect } from 'react-router-dom';\nimport ChromeDinoGame from 'react-chrome-dino';\n\nfunction Play({\n  changeAlert\n}) {\n  _s();\n\n  const cookies = new Cookies();\n  const [redirect, setRedirect] = React.useState('');\n  const [started, setStarted] = React.useState(false);\n  const [question, setQuestion] = React.useState('');\n  const [point, setPoint] = React.useState(0);\n  const [src, setSrc] = React.useState('');\n  const [choices, setChoices] = React.useState([]);\n  const [multiple, setMultiple] = React.useState(false);\n  const [answersSelected, selectAnswer] = React.useState([]);\n  const [time, setTime] = React.useState(0);\n  const [timer, setTimer] = React.useState(null);\n  const [playing, setPlaying] = React.useState(true);\n  const [questionResult, setResult] = React.useState(null);\n\n  const endSession = () => {\n    changeAlert('warning', 'Please join a session to play.');\n    clearInterval(timer);\n    setRedirect('/join');\n  };\n\n  const getQuestion = started => {\n    fetch('http://localhost:5005/play/' + cookies.get('player') + '/question', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then(result => {\n          setQuestion(result.question.description);\n          setPoint(result.question.point);\n          setSrc(result.question.src);\n          setChoices(result.question.choices);\n          setMultiple(result.question.multiple);\n          const newTime = result.question.time * 1000 - (new Date() - new Date(result.question.isoTimeLastQuestionStarted));\n          setTime(newTime);\n          setPlaying(newTime > 0);\n\n          if (newTime > 0) {\n            selectAnswer([]);\n          }\n\n          setStarted(started);\n        });\n      } else {\n        endSession();\n      }\n    });\n  };\n\n  const checkStatus = () => {\n    fetch('http://localhost:5005/play/' + cookies.get('player') + '/status', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then(result => {\n          if (result.started) {\n            getQuestion(result.started);\n          }\n        });\n      } else {\n        endSession();\n      }\n    });\n  };\n\n  React.useEffect(() => {\n    if (cookies.get('player')) {\n      if (playing) {\n        clearInterval(timer);\n        setResult(null);\n        setTimer(setTimeout(() => {\n          setPlaying(false);\n        }, time));\n      } else {\n        clearTimeout(timer);\n\n        if (started) {\n          fetch('http://localhost:5005/play/' + cookies.get('player') + '/answer', {\n            method: 'GET',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json'\n            }\n          }).then(data => {\n            if (data.status === 200) {\n              data.json().then(result => {\n                const correctAnswer = [];\n                let correct = true;\n                choices.forEach(choice => {\n                  if (result.answerIds.includes(choice.id)) {\n                    correctAnswer.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: choice.choice\n                    }, choice.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 40\n                    }, this));\n                    correct &= answersSelected.includes(choice.id);\n                  }\n                });\n                const getItRight = correct ? 'right' : 'wrong';\n                setResult( /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"popup\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Correct answer:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 23\n                    }, this), correctAnswer, /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"You get this question \", getItRight, \"!\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Please wait for admin advancing to the next question.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false));\n              });\n            } else {\n              endSession();\n            }\n          });\n        }\n\n        setTimer(setInterval(() => {\n          checkStatus();\n        }, 1000));\n      }\n    } else {\n      endSession();\n    }\n  }, [started, playing]);\n  let display = null;\n\n  if (src.startsWith('http')) {\n    display = /*#__PURE__*/_jsxDEV(\"iframe\", {\n      src: src\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }, this);\n  } else if (src !== '') {\n    display = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: src\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }, this);\n  }\n\n  const answers = choices.map(choice => {\n    let ansClass = 'list-group-item';\n\n    if (answersSelected.includes(choice.id)) {\n      ansClass += ' selectedAnswer';\n    }\n\n    let answerClicked = null;\n\n    if (playing) {\n      answerClicked = () => {\n        const i = answersSelected.indexOf(choice.id);\n\n        if (i > -1) {\n          const newAnswers = answersSelected.slice();\n          newAnswers.splice(i, 1);\n          selectAnswer(newAnswers);\n        } else if (multiple) {\n          const newAnswers = answersSelected.slice();\n          newAnswers.push(choice.id);\n          selectAnswer(newAnswers);\n        } else {\n          selectAnswer([choice.id]);\n        }\n\n        console.log(choice.id);\n      };\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: ansClass,\n      onClick: answerClicked,\n      children: choice.choice\n    }, choice.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this);\n  });\n  React.useEffect(() => {\n    fetch('http://localhost:5005/play/' + cookies.get('player') + '/answer', {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        answerIds: answersSelected\n      })\n    });\n  }, [answersSelected]);\n  let numberOfAnswers = null;\n\n  if (multiple) {\n    numberOfAnswers = '(You can choose more than one answer.)';\n  } else {\n    numberOfAnswers = '(You can choose one answer only.)';\n  }\n\n  if (redirect !== '') {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      push: true,\n      to: redirect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this);\n  } else if (!started) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The game has not started yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please wait for admin to start the game...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChromeDinoGame, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"firstsection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: question + ' (' + point + (point === 1 ? ' point' : ' points') + ')'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), display, /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: answers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), numberOfAnswers, questionResult]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\n\n_s(Play, \"DM4MnCz9FFrtKFnA2HYsJGzJ/14=\");\n\n_c = Play;\nPlay.propTypes = {\n  changeAlert: propTypes.func\n};\nexport default Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/pages/play.jsx"],"names":["React","propTypes","Cookies","Redirect","ChromeDinoGame","Play","changeAlert","cookies","redirect","setRedirect","useState","started","setStarted","question","setQuestion","point","setPoint","src","setSrc","choices","setChoices","multiple","setMultiple","answersSelected","selectAnswer","time","setTime","timer","setTimer","playing","setPlaying","questionResult","setResult","endSession","clearInterval","getQuestion","fetch","get","method","headers","Accept","then","data","status","json","result","description","newTime","Date","isoTimeLastQuestionStarted","checkStatus","useEffect","setTimeout","clearTimeout","correctAnswer","correct","forEach","choice","answerIds","includes","id","push","getItRight","setInterval","display","startsWith","answers","map","ansClass","answerClicked","i","indexOf","newAnswers","slice","splice","console","log","body","JSON","stringify","numberOfAnswers","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport Cookies from 'universal-cookie';\nimport {\n  Redirect\n} from 'react-router-dom';\nimport ChromeDinoGame from 'react-chrome-dino';\nfunction Play ({ changeAlert }) {\n  const cookies = new Cookies();\n  const [redirect, setRedirect] = React.useState('');\n  const [started, setStarted] = React.useState(false);\n  const [question, setQuestion] = React.useState('');\n  const [point, setPoint] = React.useState(0);\n  const [src, setSrc] = React.useState('');\n  const [choices, setChoices] = React.useState([]);\n  const [multiple, setMultiple] = React.useState(false);\n  const [answersSelected, selectAnswer] = React.useState([]);\n  const [time, setTime] = React.useState(0);\n  const [timer, setTimer] = React.useState(null);\n  const [playing, setPlaying] = React.useState(true);\n  const [questionResult, setResult] = React.useState(null);\n\n  const endSession = () => {\n    changeAlert('warning', 'Please join a session to play.');\n    clearInterval(timer);\n    setRedirect('/join');\n  };\n\n  const getQuestion = (started) => {\n    fetch('http://localhost:5005/play/' + cookies.get('player') + '/question', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then((result) => {\n          setQuestion(result.question.description);\n          setPoint(result.question.point);\n          setSrc(result.question.src);\n          setChoices(result.question.choices);\n          setMultiple(result.question.multiple);\n          const newTime = result.question.time * 1000 - (new Date() - new Date(result.question.isoTimeLastQuestionStarted));\n          setTime(newTime);\n          setPlaying(newTime > 0);\n          if (newTime > 0) {\n            selectAnswer([]);\n          }\n          setStarted(started);\n        });\n      } else {\n        endSession();\n      }\n    });\n  };\n  const checkStatus = () => {\n    fetch('http://localhost:5005/play/' + cookies.get('player') + '/status', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then((result) => {\n          if (result.started) {\n            getQuestion(result.started);\n          }\n        });\n      } else {\n        endSession();\n      }\n    });\n  };\n\n  React.useEffect(() => {\n    if (cookies.get('player')) {\n      if (playing) {\n        clearInterval(timer);\n        setResult(null);\n        setTimer(setTimeout(() => {\n          setPlaying(false);\n        }, time));\n      } else {\n        clearTimeout(timer);\n        if (started) {\n          fetch('http://localhost:5005/play/' + cookies.get('player') + '/answer', {\n            method: 'GET',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json'\n            }\n          }).then(data => {\n            if (data.status === 200) {\n              data.json().then((result) => {\n                const correctAnswer = [];\n                let correct = true;\n                choices.forEach((choice) => {\n                  if (result.answerIds.includes(choice.id)) {\n                    correctAnswer.push(<p key={choice.id}>{choice.choice}</p>);\n                    correct &= answersSelected.includes(choice.id);\n                  }\n                });\n\n                const getItRight = correct ? 'right' : 'wrong';\n                setResult(\n                  <>\n                    <div\n                      className='popup'\n                    >\n                      <p>Correct answer:</p>\n                      {correctAnswer}\n                      <p>You get this question {getItRight}!</p>\n                      <p>Please wait for admin advancing to the next question.</p>\n                    </div>\n                  </>\n                );\n              });\n            } else {\n              endSession();\n            }\n          });\n        }\n        setTimer(setInterval(() => {\n          checkStatus();\n        }, 1000));\n      }\n    } else {\n      endSession();\n    }\n  }, [started, playing]);\n\n  let display = null;\n  if (src.startsWith('http')) {\n    display = <iframe src={src}></iframe>;\n  } else if (src !== '') {\n    display = <img src={src}></img>;\n  }\n\n  const answers = choices.map((choice) => {\n    let ansClass = 'list-group-item';\n    if (answersSelected.includes(choice.id)) {\n      ansClass += ' selectedAnswer';\n    }\n\n    let answerClicked = null;\n    if (playing) {\n      answerClicked = () => {\n        const i = answersSelected.indexOf(choice.id);\n        if (i > -1) {\n          const newAnswers = answersSelected.slice();\n          newAnswers.splice(i, 1);\n          selectAnswer(newAnswers);\n        } else if (multiple) {\n          const newAnswers = answersSelected.slice();\n          newAnswers.push(choice.id);\n          selectAnswer(newAnswers);\n        } else {\n          selectAnswer([choice.id]);\n        }\n        console.log(choice.id);\n      };\n    }\n    return (\n      <li className={ansClass} key={choice.id} onClick={answerClicked}>\n        {choice.choice}\n      </li>\n    );\n  });\n  React.useEffect(() => {\n    fetch('http://localhost:5005/play/' + cookies.get('player') + '/answer', {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        answerIds: answersSelected\n      })\n    });\n  }, [answersSelected]);\n\n  let numberOfAnswers = null;\n  if (multiple) {\n    numberOfAnswers = '(You can choose more than one answer.)';\n  } else {\n    numberOfAnswers = '(You can choose one answer only.)';\n  }\n\n  if (redirect !== '') {\n    return (\n      <Redirect push to={redirect} />\n    );\n  } else if (!started) {\n    return (\n      <>\n        <h1>The game has not started yet</h1>\n        <p>Please wait for admin to start the game...</p>\n        <ChromeDinoGame />\n      </>\n    );\n  } else {\n    return (\n      <>\n        <div className='firstsection'>\n          <h1>{question + ' (' + point + ((point === 1) ? ' point' : ' points') + ')'}</h1>\n          {display}\n          <ul className='list-group'>\n            {answers}\n          </ul>\n          {numberOfAnswers}\n          {questionResult}\n        </div>\n      </>\n    );\n  }\n}\n\nPlay.propTypes = {\n  changeAlert: propTypes.func\n};\n\nexport default Play;\n"]},"metadata":{},"sourceType":"module"}