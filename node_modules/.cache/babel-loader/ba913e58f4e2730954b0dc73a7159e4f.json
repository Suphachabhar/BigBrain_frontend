{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/pages/dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport Cookies from 'universal-cookie';\nimport { Link, Redirect } from 'react-router-dom';\nimport GameBoard from './../elements/gameBoard';\n\nfunction Dashboard({\n  setAlert\n}) {\n  _s();\n\n  const cookies = new Cookies();\n  const [redirect, setRedirect] = React.useState('');\n  const [gameDashboard, setGames] = React.useState([]);\n  const closeBtn = /*#__PURE__*/React.createElement('button', {\n    className: 'btn-close',\n    onClick: () => {\n      setAlert(null);\n    }\n  }, 'Close');\n  React.useEffect(() => {\n    fetch('http://localhost:5005/admin/quiz', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then(result => {\n          setGames(result.quizzes.map(quiz => {\n            return /*#__PURE__*/_jsxDEV(GameBoard, {\n              quiz: quiz\n            }, quiz.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 20\n            }, this);\n          }));\n        });\n      } else {\n        cookies.remove('email');\n        cookies.remove('token');\n        setAlert( /*#__PURE__*/React.createElement('div', {\n          className: 'alert alert-warning alert-dismissible fade show',\n          role: 'alert'\n        }, 'Your session has expired. Please log in again.', closeBtn));\n        setRedirect('/login');\n      }\n    });\n  }, []);\n\n  if (redirect === '') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"create\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Create game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), gameDashboard]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      push: true,\n      to: redirect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Dashboard, \"tk0QA9/IIZ2lT5hBOYTBoXEJfbo=\");\n\n_c = Dashboard;\nDashboard.propTypes = {\n  setAlert: propTypes.func\n};\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/pages/dashboard.jsx"],"names":["React","propTypes","Cookies","Link","Redirect","GameBoard","Dashboard","setAlert","cookies","redirect","setRedirect","useState","gameDashboard","setGames","closeBtn","createElement","className","onClick","useEffect","fetch","method","headers","Accept","Authorization","get","then","data","status","json","result","quizzes","map","quiz","id","remove","role","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SACEC,IADF,EAEEC,QAFF,QAGO,kBAHP;AAKA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,SAASC,SAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAkC;AAAA;;AAChC,QAAMC,OAAO,GAAG,IAAIN,OAAJ,EAAhB;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BV,KAAK,CAACW,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACC,aAAD,EAAgBC,QAAhB,IAA4Bb,KAAK,CAACW,QAAN,CAAe,EAAf,CAAlC;AACA,QAAMG,QAAQ,gBAAGd,KAAK,CAACe,aAAN,CAAoB,QAApB,EAA8B;AAC7CC,IAAAA,SAAS,EAAE,WADkC;AAE7CC,IAAAA,OAAO,EAAE,MAAM;AAAEV,MAAAA,QAAQ,CAAC,IAAD,CAAR;AAAiB;AAFW,GAA9B,EAGd,OAHc,CAAjB;AAKAP,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM;AACpBC,IAAAA,KAAK,CAAC,kCAAD,EAAqC;AACxCC,MAAAA,MAAM,EAAE,KADgC;AAExCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB,kBAFT;AAGPC,QAAAA,aAAa,EAAE,YAAYf,OAAO,CAACgB,GAAR,CAAY,OAAZ;AAHpB;AAF+B,KAArC,CAAL,CAOGC,IAPH,CAOQC,IAAI,IAAI;AACd,UAAIA,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AACvBD,QAAAA,IAAI,CAACE,IAAL,GAAYH,IAAZ,CAAkBI,MAAD,IAAY;AAC3BhB,UAAAA,QAAQ,CAACgB,MAAM,CAACC,OAAP,CAAeC,GAAf,CAAoBC,IAAD,IAAU;AACpC,gCAAO,QAAC,SAAD;AAAyB,cAAA,IAAI,EAAEA;AAA/B,eAAgBA,IAAI,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFQ,CAAD,CAAR;AAGD,SAJD;AAKD,OAND,MAMO;AACLzB,QAAAA,OAAO,CAAC0B,MAAR,CAAe,OAAf;AACA1B,QAAAA,OAAO,CAAC0B,MAAR,CAAe,OAAf;AACA3B,QAAAA,QAAQ,eAACP,KAAK,CAACe,aAAN,CAAoB,KAApB,EAA2B;AAClCC,UAAAA,SAAS,EAAE,iDADuB;AAElCmB,UAAAA,IAAI,EAAE;AAF4B,SAA3B,EAGN,gDAHM,EAG4CrB,QAH5C,CAAD,CAAR;AAIAJ,QAAAA,WAAW,CAAC,QAAD,CAAX;AACD;AACF,KAvBD;AAwBD,GAzBD,EAyBG,EAzBH;;AA2BA,MAAID,QAAQ,KAAK,EAAjB,EAAqB;AACnB,wBACE;AAAA,6BACE;AAAA,gCACE,QAAC,IAAD;AACE,UAAA,EAAE,EAAC,QADL;AAAA,iCAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,gBADF,EAMGG,aANH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAYD,GAbD,MAaO;AACL,wBACE,QAAC,QAAD;AAAU,MAAA,IAAI,MAAd;AAAe,MAAA,EAAE,EAAEH;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;AACF;;GAtDQH,S;;KAAAA,S;AAwDTA,SAAS,CAACL,SAAV,GAAsB;AACpBM,EAAAA,QAAQ,EAAEN,SAAS,CAACmC;AADA,CAAtB;AAIA,eAAe9B,SAAf","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport Cookies from 'universal-cookie';\nimport {\n  Link,\n  Redirect\n} from 'react-router-dom';\n\nimport GameBoard from './../elements/gameBoard';\n\nfunction Dashboard ({ setAlert }) {\n  const cookies = new Cookies();\n  const [redirect, setRedirect] = React.useState('');\n  const [gameDashboard, setGames] = React.useState([]);\n  const closeBtn = React.createElement('button', {\n    className: 'btn-close',\n    onClick: () => { setAlert(null); }\n  }, 'Close');\n\n  React.useEffect(() => {\n    fetch('http://localhost:5005/admin/quiz', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then((result) => {\n          setGames(result.quizzes.map((quiz) => {\n            return <GameBoard key={quiz.id} quiz={quiz} />\n          }));\n        });\n      } else {\n        cookies.remove('email');\n        cookies.remove('token');\n        setAlert(React.createElement('div', {\n          className: 'alert alert-warning alert-dismissible fade show',\n          role: 'alert'\n        }, 'Your session has expired. Please log in again.', closeBtn));\n        setRedirect('/login');\n      }\n    });\n  }, []);\n\n  if (redirect === '') {\n    return (\n      <>\n        <div>\n          <Link\n            to='create'\n          >\n            <button>Create game</button>\n          </Link>\n          {gameDashboard}\n        </div>\n      </>\n    );\n  } else {\n    return (\n      <Redirect push to={redirect} />\n    );\n  }\n}\n\nDashboard.propTypes = {\n  setAlert: propTypes.func\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}