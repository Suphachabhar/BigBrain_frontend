{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/elements/gameBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport '../App.css';\nimport propTypes from 'prop-types';\nimport Cookies from 'universal-cookie';\nimport { Link } from 'react-router-dom';\nimport { Button } from '../components/Button.styles';\nimport { Quizname } from '../components/Quizname.style';\n\nfunction GameBoard({\n  quiz,\n  changeAlert,\n  forceLogout\n}) {\n  _s();\n\n  const cookies = new Cookies();\n  const [show, setShow] = React.useState(true);\n  const [name, setName] = React.useState(quiz.name);\n  const [thumbnail, setThumbnail] = React.useState(quiz.thumbnail);\n  const [questions, setQuestions] = React.useState(quiz.questions);\n  const [nQuestions, setNQuestions] = React.useState(0);\n  const [time, setTime] = React.useState(0);\n  const [session, setSession] = React.useState(quiz.active);\n  const [hasSession, setHasSession] = React.useState(quiz.active !== null);\n  const [position, setPosition] = React.useState(-1);\n  const [answerAvailable, setAnswerAvailable] = React.useState(false);\n  const initialisation = React.useRef(true);\n  const [popupArea, setPopup] = React.useState(null);\n  const closeBtn = /*#__PURE__*/React.createElement('button', {\n    onClick: () => {\n      setPopup(null);\n    }\n  }, 'Close');\n\n  const getInfo = () => {\n    fetch('http://localhost:5005/admin/quiz/' + quiz.id, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then(result => {\n          setName(result.name);\n          setQuestions(result.questions);\n          setNQuestions(result.questions.length);\n          setThumbnail(result.thumbnail);\n          let timeTmp = 0;\n          result.questions.forEach(q => {\n            timeTmp += q.time;\n          });\n          setTime(timeTmp);\n\n          if (!hasSession && result.active) {\n            setSession(result.active);\n            setHasSession(true);\n          } else if (hasSession && !result.active) {\n            setHasSession(false);\n          }\n        });\n      } else if (data.status === 403) {\n        forceLogout();\n      } else {\n        data.json().then(result => {\n          changeAlert('danger', result.error);\n        });\n      }\n    });\n  };\n\n  const startSession = () => {\n    fetch('http://localhost:5005/admin/quiz/' + quiz.id + '/start', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        getInfo();\n      } else if (data.status === 403) {\n        forceLogout();\n      } else {\n        data.json().then(result => {\n          changeAlert('danger', result.error);\n        });\n      }\n    });\n  };\n\n  const stopSession = () => {\n    fetch('http://localhost:5005/admin/quiz/' + quiz.id + '/end', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        getInfo();\n      } else if (data.status === 403) {\n        forceLogout();\n      } else {\n        data.json().then(result => {\n          changeAlert('danger', result.error);\n        });\n      }\n    });\n  };\n\n  const deleteGame = () => {\n    fetch('http://localhost:5005/admin/quiz/' + quiz.id, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then(result => {\n          changeAlert('success', 'You have deleted \"' + name + '\"');\n          setShow(false);\n        });\n      } else if (data.status === 403) {\n        forceLogout();\n      } else {\n        data.json().then(result => {\n          changeAlert('danger', result.error);\n        });\n      }\n    });\n  };\n\n  const copySession = () => {\n    navigator.clipboard.writeText('http://localhost:3000/join/' + session);\n  };\n\n  const showShareLink = () => {\n    setPopup( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You have started a session for \\\"\", name, \"\\\"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Session ID: \", session, \" \", /*#__PURE__*/_jsxDEV(Button, {\n              title: \"Copy link\",\n              click: copySession\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), closeBtn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false));\n  };\n\n  const updateSessionStatus = () => {\n    fetch('http://localhost:5005/admin/session/' + session + '/status', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then(result => {\n          const i = result.results.position;\n          const available = result.results.answerAvailable;\n          setQuestions(result.results.questions);\n          setPosition(i);\n\n          if (i >= result.results.questions.length) {\n            setSession(null);\n            setHasSession(false);\n          } else if (i >= 0 && !available) {\n            const timeout = result.results.questions[i].time * 1000 - (new Date() - new Date(result.results.isoTimeLastQuestionStarted));\n            setTimeout(() => {\n              setAnswerAvailable(true);\n            }, timeout);\n          }\n\n          setAnswerAvailable(available);\n        });\n      } else if (data.status === 403) {\n        forceLogout();\n      } else {\n        data.json().then(result => {\n          changeAlert('danger', result.error);\n        });\n      }\n    });\n  };\n\n  const advanceSession = () => {\n    fetch('http://localhost:5005/admin/quiz/' + quiz.id + '/advance', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        updateSessionStatus();\n        console.log(questions[0]);\n      } else if (data.status === 403) {\n        forceLogout();\n      } else {\n        data.json().then(result => {\n          changeAlert('danger', result.error);\n        });\n      }\n    });\n    updateSessionStatus();\n  };\n\n  React.useEffect(() => {\n    getInfo(true);\n  }, []);\n  React.useEffect(() => {\n    if (session) {\n      updateSessionStatus();\n    }\n\n    if (initialisation.current) {\n      initialisation.current = false;\n    } else if (hasSession) {\n      showShareLink();\n    } else {\n      setPopup( /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"You have stopped the session for \\\"\", name, \"\\\"!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: '/results/' + session,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                title: \"See results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), closeBtn]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false));\n    }\n  }, [hasSession]);\n  let img = null;\n\n  if (thumbnail) {\n    img = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: thumbnail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }, this);\n  }\n\n  let buttons = null;\n  let statusArea = null;\n\n  if (hasSession) {\n    if (position < 0) {\n      statusArea = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"The game is not started.\", /*#__PURE__*/_jsxDEV(Button, {\n            title: \"Start\",\n            name: \"start\",\n            click: advanceSession\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    } else if (!answerAvailable) {\n      statusArea = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Question \", position + 1, \" is released. You can advance the game after the answer is released.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    } else {\n      statusArea = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"The answer of question \", position + 1, \" is released.\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: advanceSession,\n            children: \"Next question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    }\n\n    buttons = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [statusArea, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          title: \"Share link\",\n          click: () => {\n            showShareLink();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          title: \"Stop session\",\n          click: stopSession\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    buttons = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        title: \"Create session\",\n        name: \"Create session\",\n        click: startSession\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: '/edit/' + quiz.id,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          title: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Delete\",\n        click: deleteGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (show) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(Quizname, {\n            title: quiz.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Number of questions: \", nQuestions]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Time: \", (time / 60).toFixed(1), \" mins\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), img, buttons, popupArea]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    return null;\n  }\n}\n\n_s(GameBoard, \"h555W6FGppVuqxlBI9255hE/D6U=\");\n\n_c = GameBoard;\nGameBoard.propTypes = {\n  quiz: propTypes.object,\n  changeAlert: propTypes.func,\n  forceLogout: propTypes.func\n};\nexport default GameBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"sources":["/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/elements/gameBoard.jsx"],"names":["React","propTypes","Cookies","Link","Button","Quizname","GameBoard","quiz","changeAlert","forceLogout","cookies","show","setShow","useState","name","setName","thumbnail","setThumbnail","questions","setQuestions","nQuestions","setNQuestions","time","setTime","session","setSession","active","hasSession","setHasSession","position","setPosition","answerAvailable","setAnswerAvailable","initialisation","useRef","popupArea","setPopup","closeBtn","createElement","onClick","getInfo","fetch","id","method","headers","Accept","Authorization","get","then","data","status","json","result","length","timeTmp","forEach","q","error","startSession","stopSession","deleteGame","copySession","navigator","clipboard","writeText","showShareLink","updateSessionStatus","i","results","available","timeout","Date","isoTimeLastQuestionStarted","setTimeout","advanceSession","console","log","useEffect","current","img","buttons","statusArea","toFixed","object","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../App.css'\nimport propTypes from 'prop-types';\nimport Cookies from 'universal-cookie';\nimport {\n  Link\n} from 'react-router-dom';\nimport { Button } from '../components/Button.styles';\nimport { Quizname } from '../components/Quizname.style';\nfunction GameBoard ({ quiz, changeAlert, forceLogout }) {\n  const cookies = new Cookies();\n  const [show, setShow] = React.useState(true);\n  const [name, setName] = React.useState(quiz.name);\n  const [thumbnail, setThumbnail] = React.useState(quiz.thumbnail);\n  const [questions, setQuestions] = React.useState(quiz.questions);\n  const [nQuestions, setNQuestions] = React.useState(0);\n  const [time, setTime] = React.useState(0);\n  const [session, setSession] = React.useState(quiz.active);\n  const [hasSession, setHasSession] = React.useState(quiz.active !== null);\n  const [position, setPosition] = React.useState(-1);\n  const [answerAvailable, setAnswerAvailable] = React.useState(false);\n  const initialisation = React.useRef(true);\n  const [popupArea, setPopup] = React.useState(null);\n\n  const closeBtn = React.createElement('button', {\n    onClick: () => { setPopup(null); }\n  }, 'Close');\n\n  const getInfo = () => {\n    fetch('http://localhost:5005/admin/quiz/' + quiz.id, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then((result) => {\n          setName(result.name);\n          setQuestions(result.questions);\n          setNQuestions(result.questions.length);\n          setThumbnail(result.thumbnail);\n          let timeTmp = 0;\n          result.questions.forEach((q) => {\n            timeTmp += q.time;\n          });\n          setTime(timeTmp);\n          if (!hasSession && result.active) {\n            setSession(result.active);\n            setHasSession(true);\n          } else if (hasSession && !result.active) {\n            setHasSession(false);\n          }\n        });\n      } else if (data.status === 403) {\n        forceLogout();\n      } else {\n        data.json().then((result) => {\n          changeAlert('danger', result.error);\n        });\n      }\n    });\n  };\n  const startSession = () => {\n    fetch('http://localhost:5005/admin/quiz/' + quiz.id + '/start', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        getInfo();\n      } else if (data.status === 403) {\n        forceLogout();\n      } else {\n        data.json().then((result) => {\n          changeAlert('danger', result.error);\n        });\n      }\n    });\n  };\n  const stopSession = () => {\n    fetch('http://localhost:5005/admin/quiz/' + quiz.id + '/end', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        getInfo();\n      } else if (data.status === 403) {\n        forceLogout();\n      } else {\n        data.json().then((result) => {\n          changeAlert('danger', result.error);\n        });\n      }\n    });\n  };\n  const deleteGame = () => {\n    fetch('http://localhost:5005/admin/quiz/' + quiz.id, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then((result) => {\n          changeAlert('success', 'You have deleted \"' + name + '\"');\n          setShow(false);\n        });\n      } else if (data.status === 403) {\n        forceLogout();\n      } else {\n        data.json().then((result) => {\n          changeAlert('danger', result.error);\n        });\n      }\n    });\n  };\n  const copySession = () => {\n    navigator.clipboard.writeText('http://localhost:3000/join/' + session);\n  };\n  const showShareLink = () => {\n    setPopup(\n      <>\n        <div\n          className='popup'\n        >\n          <div>\n            <p>You have started a session for &quot;{name}&quot;!</p>\n            <p>Session ID: {session} <Button title=\"Copy link\" click={copySession} /></p>\n          </div>\n          {closeBtn}\n        </div>\n      </>\n    );\n  };\n  const updateSessionStatus = () => {\n    fetch('http://localhost:5005/admin/session/' + session + '/status', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then((result) => {\n          const i = result.results.position;\n          const available = result.results.answerAvailable;\n          setQuestions(result.results.questions);\n          setPosition(i);\n          if (i >= result.results.questions.length) {\n            setSession(null);\n            setHasSession(false);\n          } else if (i >= 0 && !available) {\n            const timeout = result.results.questions[i].time * 1000 - (new Date() - new Date(result.results.isoTimeLastQuestionStarted));\n            setTimeout(() => {\n              setAnswerAvailable(true);\n            }, timeout);\n          }\n          setAnswerAvailable(available);\n        });\n      } else if (data.status === 403) {\n        forceLogout();\n      } else {\n        data.json().then((result) => {\n          changeAlert('danger', result.error);\n        });\n      }\n    });\n  };\n  const advanceSession = () => {\n    fetch('http://localhost:5005/admin/quiz/' + quiz.id + '/advance', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        updateSessionStatus();\n        console.log(questions[0]);\n      } else if (data.status === 403) {\n        forceLogout();\n      } else {\n        data.json().then((result) => {\n          changeAlert('danger', result.error);\n        });\n      }\n    });\n    updateSessionStatus();\n  };\n\n  React.useEffect(() => {\n    getInfo(true);\n  }, []);\n  React.useEffect(() => {\n    if (session) {\n      updateSessionStatus();\n    }\n    if (initialisation.current) {\n      initialisation.current = false;\n    } else if (hasSession) {\n      showShareLink();\n    } else {\n      setPopup(\n        <>\n          <div\n            className='popup'\n          >\n            <div>\n              <p>You have stopped the session for &quot;{name}&quot;!</p>\n              <Link\n                to={'/results/' + session}\n              >\n                <Button title=\"See results\" />\n              </Link>\n            </div>\n            {closeBtn}\n          </div>\n        </>\n      );\n    }\n  }, [hasSession]);\n\n  let img = null;\n  if (thumbnail) {\n    img = <div><img src={thumbnail} /></div>;\n  }\n\n  let buttons = null;\n  let statusArea = null;\n  if (hasSession) {\n    if (position < 0) {\n      statusArea = (\n        <>\n          <div>\n            The game is not started.\n            <Button title=\"Start\" name=\"start\" click={advanceSession} />\n          </div>\n        </>\n      );\n    } else if (!answerAvailable) {\n      statusArea = (\n        <>\n          <div>\n            Question {position + 1} is released. You can advance the game after the answer is released.\n          </div>\n        </>\n      );\n    } else {\n      statusArea = (\n        <>\n          <div>\n            The answer of question {position + 1} is released.\n            <button onClick={advanceSession}>Next question</button>\n          </div>\n        </>\n      );\n    }\n    buttons = (\n      <>\n        {statusArea}\n        <div>\n          <Button title=\"Share link\" click={() => { showShareLink() }} />\n          <Button title=\"Stop session\" click={stopSession} />\n        </div>\n      </>\n    );\n  } else {\n    buttons = (\n      <>\n        <Button title=\"Create session\" name=\"Create session\" click={startSession} />\n        <Link\n          to={'/edit/' + quiz.id}\n        >\n          <Button title=\"Edit\" />\n        </Link>\n        <Button title=\"Delete\" click={deleteGame} />\n      </>\n    );\n  }\n\n  if (show) {\n    return (\n      <>\n        <ul className=\"list-group\">\n          <li className=\"list-group-item\">\n            <Quizname title={quiz.name} />\n            <p>Number of questions: {nQuestions}</p>\n            <p>Time: {(time / 60).toFixed(1)} mins</p>\n            {img}\n            {buttons}\n            {popupArea}\n          </li>\n        </ul>\n      </>\n    );\n  } else {\n    return null;\n  }\n}\n\nGameBoard.propTypes = {\n  quiz: propTypes.object,\n  changeAlert: propTypes.func,\n  forceLogout: propTypes.func\n};\n\nexport default GameBoard;\n"]},"metadata":{},"sourceType":"module"}