{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/pages/join.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport Cookies from 'universal-cookie';\nimport { Redirect, useParams } from 'react-router-dom';\n\nfunction Join({\n  changeAlert\n}) {\n  _s();\n\n  const cookies = new Cookies();\n  const {\n    id\n  } = useParams();\n  const [redirect, setRedirect] = React.useState('');\n  const [session, setSession] = React.useState(id);\n  const [name, setName] = React.useState('');\n\n  const joinSession = () => {\n    if (name !== '') {\n      fetch('http://localhost:5005/play/join/' + session, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: name\n        })\n      }).then(data => {\n        if (data.status === 200) {\n          data.json().then(result => {\n            cookies.set('player', result.playerId);\n            setRedirect('/play/' + session);\n          });\n        } else {\n          data.json().then(result => {\n            changeAlert('danger', result.error);\n          });\n        }\n      });\n    } else {\n      changeAlert('danger', 'Please enter your name.');\n    }\n  };\n\n  if (redirect === '') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"sr-only\",\n          children: \"Session ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Session ID\",\n          onChange: e => {\n            setSession(e.target.value);\n          },\n          value: session\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"sr-only\",\n          children: \"Your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Your name\",\n          onChange: e => {\n            setName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-lg btn-primary btn-block btn-sm\",\n        onClick: joinSession,\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      push: true,\n      to: redirect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Join, \"NFXsWXS+EWiMc7QRdGwvPyRQhwA=\", false, function () {\n  return [useParams];\n});\n\n_c = Join;\nJoin.propTypes = {\n  changeAlert: propTypes.func\n};\nexport default Join;\n\nvar _c;\n\n$RefreshReg$(_c, \"Join\");","map":{"version":3,"sources":["/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/pages/join.jsx"],"names":["React","propTypes","Cookies","Redirect","useParams","Join","changeAlert","cookies","id","redirect","setRedirect","useState","session","setSession","name","setName","joinSession","fetch","method","headers","Accept","body","JSON","stringify","then","data","status","json","result","set","playerId","error","e","target","value","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport Cookies from 'universal-cookie';\nimport {\n  Redirect,\n  useParams\n} from 'react-router-dom';\n\nfunction Join ({ changeAlert }) {\n  const cookies = new Cookies();\n  const { id } = useParams();\n  const [redirect, setRedirect] = React.useState('');\n  const [session, setSession] = React.useState(id);\n  const [name, setName] = React.useState('');\n\n  const joinSession = () => {\n    if (name !== '') {\n      fetch('http://localhost:5005/play/join/' + session, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: name\n        })\n      }).then(data => {\n        if (data.status === 200) {\n          data.json().then((result) => {\n            cookies.set('player', result.playerId);\n            setRedirect('/play/' + session);\n          });\n        } else {\n          data.json().then((result) => {\n            changeAlert('danger', result.error);\n          });\n        }\n      });\n    } else {\n      changeAlert('danger', 'Please enter your name.');\n    }\n  };\n\n  if (redirect === '') {\n    return (\n      <>\n        <div>\n          <label className=\"sr-only\">\n            Session ID\n          </label>\n          <input\n            type='number'\n            placeholder='Session ID'\n            onChange={(e) => { setSession(e.target.value); }}\n            value={session}\n          ></input>\n        </div>\n        <div>\n          <label className=\"sr-only\">\n            Your name\n          </label>\n          <input\n            type='text'\n            placeholder='Your name'\n            onChange={(e) => { setName(e.target.value); }}\n          ></input>\n        </div>\n        <button\n          className='btn btn-lg btn-primary btn-block btn-sm'\n          onClick={joinSession}\n        >\n          Join\n        </button>\n      </>\n    );\n  } else {\n    return (\n      <Redirect push to={redirect} />\n    );\n  }\n}\n\nJoin.propTypes = {\n  changeAlert: propTypes.func\n};\n\nexport default Join;\n"]},"metadata":{},"sourceType":"module"}