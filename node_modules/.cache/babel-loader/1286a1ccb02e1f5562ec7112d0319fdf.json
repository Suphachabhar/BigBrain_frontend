{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/elements/editGameBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router';\nimport Cookies from 'universal-cookie';\nimport { Link } from 'react-router-dom';\nimport propTypes from 'prop-types';\n\nfunction Edit({\n  changeAlert\n}) {\n  _s();\n\n  const cookies = new Cookies();\n  const {\n    id\n  } = useParams();\n  const [questions, setQuestions] = React.useState(null);\n  const [quiz, setQuiz] = React.useState([]);\n  const [name, setName] = React.useState('');\n  const [thumbnail, setThumbnail] = React.useState('');\n  const initialisation = React.useRef(true);\n  React.useEffect(() => {\n    fetch('http://localhost:5005/admin/quiz/' + id, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then(result => {\n          setQuiz(result.questions);\n          setName(result.name);\n          setThumbnail(result.thumbnail);\n        });\n      }\n    });\n  }, []);\n\n  const deleteQuestion = () => {\n    console.log(quiz);\n    fetch('http://localhost:5005/admin/quiz/' + id, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      },\n      body: JSON.stringify({\n        questions: quiz,\n        name: name,\n        thumbnail: thumbnail\n      })\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then(result => {\n          changeAlert('success', 'You have deleted \"' + name + '\"');\n        });\n      }\n    });\n  };\n\n  React.useEffect(() => {\n    if (initialisation.current) {\n      initialisation.current - false;\n    } else {\n      setQuestions(quiz.map(question => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [question.description, /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: '/edit/' + id + '/' + question.id,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: deleteQuestion,\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, question.description, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      }));\n    }\n  }, [quiz]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Question board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: questions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Edit, \"F8pUZmgaGnsr6eMMlm9tCgLWvzM=\", false, function () {\n  return [useParams];\n});\n\n_c = Edit;\nEdit.propTypes = {\n  changeAlert: propTypes.func\n};\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/elements/editGameBoard.jsx"],"names":["React","useParams","Cookies","Link","propTypes","Edit","changeAlert","cookies","id","questions","setQuestions","useState","quiz","setQuiz","name","setName","thumbnail","setThumbnail","initialisation","useRef","useEffect","fetch","method","headers","Accept","Authorization","get","then","data","status","json","result","deleteQuestion","console","log","body","JSON","stringify","current","map","question","description","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router';\nimport Cookies from 'universal-cookie';\nimport {\n  Link\n} from 'react-router-dom';\nimport propTypes from 'prop-types';\n\nfunction Edit ({ changeAlert }) {\n  const cookies = new Cookies();\n  const { id } = useParams();\n  const [questions, setQuestions] = React.useState(null);\n  const [quiz, setQuiz] = React.useState([]);\n  const [name, setName] = React.useState('');\n  const [thumbnail, setThumbnail] = React.useState('');\n  const initialisation = React.useRef(true);\n\n  React.useEffect(() => {\n    fetch('http://localhost:5005/admin/quiz/' + id, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then((result) => {\n          setQuiz(result.questions);\n          setName(result.name);\n          setThumbnail(result.thumbnail);\n        })\n      }\n    })\n  }, []);\n\n  const deleteQuestion = () => {\n    console.log(quiz);\n    fetch('http://localhost:5005/admin/quiz/' + id, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      },\n      body: JSON.stringify({\n        questions: quiz,\n        name: name,\n        thumbnail: thumbnail\n      }),\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then((result) => {\n          changeAlert('success', 'You have deleted \"' + name + '\"');\n        });\n      }\n    });\n  };\n\n  React.useEffect(() => {\n    if (initialisation.current) {\n      initialisation.current - false;\n    } else {\n      setQuestions(quiz.map(question => {\n        return (\n          <>\n            <p\n              key={question.description}\n            >\n              {question.description}\n              <span\n              >\n                <Link\n                    to={'/edit/' + id + '/' + question.id}\n                  >\n                    <button>Edit</button>\n                  </Link>\n                  <button onClick={deleteQuestion}>Delete</button>\n              </span>\n            </p>\n          </>\n        );\n      }))\n    }\n  }, [quiz]);\n\n  return (\n    <div>\n      <h1\n      >\n        Question board\n      </h1>\n      <button>Create</button>\n      <p>{questions}</p>\n    </div>\n  );\n}\n\nEdit.propTypes = {\n  changeAlert: propTypes.func\n};\n\nexport default Edit;\n"]},"metadata":{},"sourceType":"module"}