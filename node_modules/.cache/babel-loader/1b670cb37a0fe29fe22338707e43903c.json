{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/pages/dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; //import { DashboardHead } from '../components/Dashboard.styles';\n\nimport propTypes from 'prop-types';\nimport Cookies from 'universal-cookie';\nimport { Link, Redirect } from 'react-router-dom';\nimport GameBoard from './../elements/gameBoard';\n\nfunction Dashboard({\n  changeAlert,\n  forceLogout\n}) {\n  _s();\n\n  const cookies = new Cookies();\n  const [redirect, setRedirect] = React.useState('');\n\n  const forceLogoutAndRedirect = () => {\n    forceLogout();\n    setRedirect('/login');\n  };\n\n  const [gameDashboard, setGames] = React.useState([]);\n  React.useEffect(() => {\n    fetch('http://localhost:5005/admin/quiz', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then(result => {\n          setGames(result.quizzes.map(quiz => {\n            return /*#__PURE__*/_jsxDEV(GameBoard, {\n              quiz: quiz,\n              changeAlert: changeAlert,\n              forceLogout: forceLogoutAndRedirect\n            }, quiz.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 20\n            }, this);\n          }));\n        });\n      } else {\n        forceLogoutAndRedirect();\n      }\n    });\n  }, []);\n\n  if (redirect === '') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: DashboardHead,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"create\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            children: \"Create a new game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: gameDashboard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      push: true,\n      to: redirect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Dashboard, \"tk0QA9/IIZ2lT5hBOYTBoXEJfbo=\");\n\n_c = Dashboard;\nDashboard.propTypes = {\n  setAlert: propTypes.func,\n  forceLogout: propTypes.func\n};\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/suphachabharnigrodhananda/Desktop/6080/ass3/frontend/src/pages/dashboard.jsx"],"names":["React","propTypes","Cookies","Link","Redirect","GameBoard","Dashboard","changeAlert","forceLogout","cookies","redirect","setRedirect","useState","forceLogoutAndRedirect","gameDashboard","setGames","useEffect","fetch","method","headers","Accept","Authorization","get","then","data","status","json","result","quizzes","map","quiz","id","DashboardHead","setAlert","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SACEC,IADF,EAEEC,QAFF,QAGO,kBAHP;AAKA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,SAASC,SAAT,CAAoB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAApB,EAAkD;AAAA;;AAChD,QAAMC,OAAO,GAAG,IAAIP,OAAJ,EAAhB;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BX,KAAK,CAACY,QAAN,CAAe,EAAf,CAAhC;;AACA,QAAMC,sBAAsB,GAAG,MAAM;AACnCL,IAAAA,WAAW;AACXG,IAAAA,WAAW,CAAC,QAAD,CAAX;AACD,GAHD;;AAKA,QAAM,CAACG,aAAD,EAAgBC,QAAhB,IAA4Bf,KAAK,CAACY,QAAN,CAAe,EAAf,CAAlC;AACAZ,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM;AACpBC,IAAAA,KAAK,CAAC,kCAAD,EAAqC;AACxCC,MAAAA,MAAM,EAAE,KADgC;AAExCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB,kBAFT;AAGPC,QAAAA,aAAa,EAAE,YAAYZ,OAAO,CAACa,GAAR,CAAY,OAAZ;AAHpB;AAF+B,KAArC,CAAL,CAOGC,IAPH,CAOQC,IAAI,IAAI;AACd,UAAIA,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AACvBD,QAAAA,IAAI,CAACE,IAAL,GAAYH,IAAZ,CAAkBI,MAAD,IAAY;AAC3BZ,UAAAA,QAAQ,CAACY,MAAM,CAACC,OAAP,CAAeC,GAAf,CAAoBC,IAAD,IAAU;AACpC,gCAAO,QAAC,SAAD;AAAyB,cAAA,IAAI,EAAEA,IAA/B;AAAqC,cAAA,WAAW,EAAEvB,WAAlD;AAA+D,cAAA,WAAW,EAAEM;AAA5E,eAAgBiB,IAAI,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFQ,CAAD,CAAR;AAGD,SAJD;AAKD,OAND,MAMO;AACLlB,QAAAA,sBAAsB;AACvB;AACF,KAjBD;AAkBD,GAnBD,EAmBG,EAnBH;;AAqBA,MAAIH,QAAQ,KAAK,EAAjB,EAAqB;AACnB,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEsB,aAAhB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AACE,UAAA,EAAE,EAAC,QADL;AAAA,iCAGE;AACA,YAAA,SAAS,EAAC,iBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAA,kBACGlB;AADH;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA,oBADF;AAmBD,GApBD,MAoBO;AACL,wBACE,QAAC,QAAD;AAAU,MAAA,IAAI,MAAd;AAAe,MAAA,EAAE,EAAEJ;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;AACF;;GAvDQJ,S;;KAAAA,S;AAyDTA,SAAS,CAACL,SAAV,GAAsB;AACpBgC,EAAAA,QAAQ,EAAEhC,SAAS,CAACiC,IADA;AAEpB1B,EAAAA,WAAW,EAAEP,SAAS,CAACiC;AAFH,CAAtB;AAKA,eAAe5B,SAAf","sourcesContent":["import React from 'react';\n//import { DashboardHead } from '../components/Dashboard.styles';\nimport propTypes from 'prop-types';\nimport Cookies from 'universal-cookie';\nimport {\n  Link,\n  Redirect\n} from 'react-router-dom';\n\nimport GameBoard from './../elements/gameBoard';\n\nfunction Dashboard ({ changeAlert, forceLogout }) {\n  const cookies = new Cookies();\n  const [redirect, setRedirect] = React.useState('');\n  const forceLogoutAndRedirect = () => {\n    forceLogout();\n    setRedirect('/login');\n  };\n\n  const [gameDashboard, setGames] = React.useState([]);\n  React.useEffect(() => {\n    fetch('http://localhost:5005/admin/quiz', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + cookies.get('token')\n      }\n    }).then(data => {\n      if (data.status === 200) {\n        data.json().then((result) => {\n          setGames(result.quizzes.map((quiz) => {\n            return <GameBoard key={quiz.id} quiz={quiz} changeAlert={changeAlert} forceLogout={forceLogoutAndRedirect} />\n          }));\n        });\n      } else {\n        forceLogoutAndRedirect();\n      }\n    });\n  }, []);\n\n  if (redirect === '') {\n    return (\n      <>\n        <div className={DashboardHead}>\n          <h1>Dashboard</h1>\n          <Link\n            to='create'\n          >\n            <button\n            className='btn btn-primary'\n            >\n              Create a new game\n            </button>\n          </Link>\n        </div>\n        <div>\n          {gameDashboard}\n        </div>\n      </>\n    );\n  } else {\n    return (\n      <Redirect push to={redirect} />\n    );\n  }\n}\n\nDashboard.propTypes = {\n  setAlert: propTypes.func,\n  forceLogout: propTypes.func\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}